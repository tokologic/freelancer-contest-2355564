"""
Django settings for the project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

from dotenv import load_dotenv

# import project.restful.schema_extensions  # noqa

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "rest_framework",
    "rest_framework_simplejwt",
    "drf_spectacular",
    "drf_spectacular_sidecar",
    "project.restful",
    "project.vehicle",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Password hasher
# https://docs.djangoproject.com/en/5.2/topics/auth/passwords/#using-argon2-with-django

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Django REST framework (DRF)
REST_FRAMEWORK = {
    "AUTH_HEADER_TYPES": ["Bearer"],
    "DEFAULT_AUTHENTICATION_CLASSES": ["project.restful.authentication.JWTAuthentication"],
    "DEFAULT_PAGINATION_CLASS": "project.restful.pagination.ApiPageNumberPagination",
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.AllowAny"],
    "DEFAULT_RENDERER_CLASSES": [
        # 'rest_framework.renderers.JSONRenderer',  # Only JSON renderer
        "project.restful.renderers.ApiRenderer",  # Only JSON renderer
        # 'rest_framework.renderers.BrowsableAPIRenderer',  # Remove this for production
    ],
    "DEFAULT_SCHEMA_CLASS": "project.restful.openapi.ProjectAutoSchema",
    "EXCEPTION_HANDLER": "project.restful.views.api_exception_handler",
    "TEST_REQUEST_DEFAULT_FORMAT": "json",
}

HATEOAS = {"LINK_KEY": "_link_"}

SPECTACULAR_SETTINGS = {
    "TITLE": "The Python project API",
    "DESCRIPTION": "The boilerplate python project",
    "VERSION": "1.0.0",
    "SECURITY": [
        {"JWTAuthentication": []},  # Name must match your extension's `name`
    ],
    "TAGS": [
        {
            "name": "vehicles",
            "description": (
                "The vehicles tag groups together all endpoints related to vehicle management "
                "within the system. These endpoints provide functionality for listing all vehicles, "
                "retrieving details of a specific vehicle, creating new vehicle entries, "
                "updating existing records, and deleting vehicles. Each endpoint ensures proper "
                "validation and follows RESTful standards to maintain data consistency and reliability."
            ),
        },
        {
            "name": "auth",
            "description": (
                "The auth tag groups together endpoints related to user authentication and account "
                "management. It currently includes functionality for user registration and login. "
                "These endpoints form the core of the authentication flow, enabling new users "
                "to create accounts and existing users to securely authenticate using their credentials. "
                "These endpoints are essential for securing access to user-specific features "
                "and data within the application."
            ),
        },
    ],
}
